# ChangeLog for app-benchmarks/glmark2
# Copyright 1999-2012 Gentoo Foundation; Distributed under the GPL v2
# $Header: $

*glmark2-2012.02 (05 Mar 2012)

  05 Mar 2012; Ivan Vecera <cera@cera.cz> +glmark2-2012.02.ebuild:
  * Consolidate main loops.
  * Support per-scene options for displaying an FPS count on screen (show-fps,
  fps-pos, fps-size), and remove --show-fps command-line option.
  * Support per-scene options for displaying a benchmark title on screen
  (title, title-pos, title-size).
  * Add command-line option to run benchmarks indefinitely (--run-forever).
  * Add command-line option to annotate the benchmarks with on-screen
  information (--annotate == -b :show-fps=true:title=#info#).
  * Move various utility classes to libmatrix.

*glmark2-2012.01 (05 Mar 2012)

  05 Mar 2012; Ivan Vecera <cera@cera.cz> +glmark2-2012.01.ebuild:
  - Run each benchmark in a fresh GL context. Use --reuse-context to revert to
  the old default behavior of using the same context for all benchmarks.
  - Add option for showing a live FPS counter on screen (--show-fps).
  - If the list of benchmarks to run contains only option-setting descriptions,
  run the default benchmarks.

*glmark2-2011.12 (05 Mar 2012)

  05 Mar 2012; Ivan Vecera <cera@cera.cz> +glmark2-2011.12.ebuild:
  * Add benchmark for bilinear filtering implemented in the fragment shader
  (not included in the default benchmarks).
  * Ensure we don't call any GL functions before binding a GL context.
  * Fix bug in the ShaderSource object that could lead to shader compilation
  errors in strict OpenGL ES 2.0 implementations.
  * Refactor scene update code to reduce duplication.

*glmark2-2011.11 (05 Mar 2012)

  05 Mar 2012; Ivan Vecera <cera@cera.cz> +glmark2-2011.11.ebuild:
  * Add benchmark for bump mapping using a height map.
  * Add benchmark for bump mapping using a tangent space normal map
    (not included in the default benchmarks).
  * Implement validation support for all default benchmarks.
  * Add a colored prefix to log messages in debug mode.
  * Clean up and refactor code.

