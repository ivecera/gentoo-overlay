diff -uNrp mplayer-1.0_rc4_p20091026.orig/libvo/vo_vaapi.c mplayer-1.0_rc4_p20091026/libvo/vo_vaapi.c
--- mplayer-1.0_rc4_p20091026.orig/libvo/vo_vaapi.c	2010-10-08 10:49:24.805169590 +0200
+++ mplayer-1.0_rc4_p20091026/libvo/vo_vaapi.c	2010-10-08 10:52:49.342443018 +0200
@@ -80,7 +80,6 @@ static unsigned int             g_output
 
 #if CONFIG_GL
 static int                      gl_enabled;
-static int                      gl_binding;
 static int                      gl_reflect;
 static GLuint                   gl_texture;
 static GLuint                   gl_font_base;
@@ -633,7 +632,6 @@ static const opt_t subopts[] = {
     { "stats",       OPT_ARG_BOOL, &cpu_stats,    NULL },
 #if CONFIG_GL
     { "gl",          OPT_ARG_BOOL, &gl_enabled,   NULL },
-    { "bind",        OPT_ARG_BOOL, &gl_binding,   NULL },
     { "reflect",     OPT_ARG_BOOL, &gl_reflect,   NULL },
 #endif
     { NULL, }
@@ -1175,29 +1173,20 @@ static void put_surface_glx(VASurfaceID 
     if (surface == VA_INVALID_SURFACE)
         return;
 
-    if (gl_binding) {
-        status = vaAssociateSurfaceGLX(va_context->display,
-                                       gl_surface,
-                                       surface,
-                                       VA_FRAME_PICTURE);
-        if (!check_status(status, "vaAssociateSurfaceGLX()"))
-            return;
+    status = vaCopySurfaceGLX(va_context->display,
+                              gl_surface,
+                              surface,
+                              VA_FRAME_PICTURE);
+    if (status == VA_STATUS_ERROR_UNIMPLEMENTED) {
+        mp_msg(MSGT_VO, MSGL_WARN,
+               "[vo_vaapi] vaCopySurfaceGLX() is not implemented\n");
+        return;
     }
     else {
-        status = vaCopySurfaceGLX(va_context->display,
-                                  gl_surface,
-                                  surface,
-                                  VA_FRAME_PICTURE);
-        if (status == VA_STATUS_ERROR_UNIMPLEMENTED) {
-            mp_msg(MSGT_VO, MSGL_WARN,
-                   "[vo_vaapi] vaCopySurfaceGLX() is not implemented\n");
-            gl_binding = 1;
-        }
-        else {
-            if (!check_status(status, "vaCopySurfaceGLX()"))
-                return;
-        }
+        if (!check_status(status, "vaCopySurfaceGLX()"))
+            return;
     }
+
     g_output_surfaces[g_output_surface] = surface;
 }
 
@@ -1208,11 +1197,6 @@ static int glx_bind_texture(void)
     glEnable(GL_TEXTURE_2D);
     BindTexture(GL_TEXTURE_2D, gl_texture);
 
-    if (gl_binding) {
-        status = vaBeginRenderSurfaceGLX(va_context->display, gl_surface);
-        if (!check_status(status, "vaBeginRenderSurfaceGLX()"))
-            return -1;
-    }
     return 0;
 }
 
@@ -1220,12 +1204,6 @@ static int glx_unbind_texture(void)
 {
     VAStatus status;
 
-    if (gl_binding) {
-        status = vaEndRenderSurfaceGLX(va_context->display, gl_surface);
-        if (!check_status(status, "vaEndRenderSurfaceGLX()"))
-            return -1;
-    }
-
     BindTexture(GL_TEXTURE_2D, 0);
     glDisable(GL_TEXTURE_2D);
     return 0;
