diff -uNrp iscsitarget-1.4.20.2.orig/kernel/wthread.c iscsitarget-1.4.20.2/kernel/wthread.c
--- iscsitarget-1.4.20.2.orig/kernel/wthread.c	2010-04-11 17:34:14.000000000 +0200
+++ iscsitarget-1.4.20.2/kernel/wthread.c	2011-05-17 18:55:15.323501466 +0200
@@ -67,14 +67,13 @@ static int worker_thread(void *arg)
 	struct iscsi_conn *conn;
 	DECLARE_WAITQUEUE(wait, current);
 
-	get_io_context(GFP_KERNEL, -1);
-
-	if (!current->io_context)
-		eprintk("%s\n", "Failed to get IO context");
-	else if (info->wthread_ioc)
-		copy_io_context(&current->io_context, &info->wthread_ioc);
-	else
-		info->wthread_ioc = current->io_context;
+	if (info->wthread_ioc &&
+	    atomic_long_inc_not_zero(&info->wthread_ioc->refcount)) {
+		put_io_context(current->io_context);
+		current->io_context = info->wthread_ioc;
+		atomic_inc(&info->wthread_ioc->nr_tasks);
+	} else
+		info->wthread_ioc = get_io_context(GFP_KERNEL, -1);
 
 	add_wait_queue(&info->wthread_sleep, &wait);
 
@@ -101,12 +100,14 @@ static int worker_thread(void *arg)
 	remove_wait_queue(&info->wthread_sleep, &wait);
 
 	if (current->io_context) {
-		struct io_context *ioc = current->io_context;
+		struct io_context *ioc;
 
 		task_lock(current);
+		ioc = current->io_context;
 		current->io_context = NULL;
 		task_unlock(current);
 
+		atomic_dec(&ioc->nr_tasks);
 		put_io_context(ioc);
 	}
 
