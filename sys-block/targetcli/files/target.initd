#!/sbin/runscript
# Copyright 1999-2014 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

description="Linux-iSCSI.org Target"

CFS_BASE="/sys/kernel/config"
CFS_TGT="${CFS_BASE}/target"
CORE_MODS="target_core_mod target_core_pscsi target_core_iblock target_core_file"
STARTUP_CONFIG="/etc/target/scsi_target.lio"

load_specfiles() {
	FABRIC_MODS=$(echo \
		'from rtslib import list_specfiles, parse_specfile;' \
		'print(" ".join(["%(kernel_module)s:%(configfs_group)s" %' \
		'parse_specfile(spec) for spec in list_specfiles()]))' | \
		python2 2>/dev/null)
}

check_install() {
	ebegin "Checking RTSlib installation"
	echo "from rtslib import Config" | python2 2>/dev/null
	eend $?
}

check_configfs() {
	if ! test -d "$CFS_BASE" || ! mountinfo -q "$CFS_BASE"; then
		eerror "Config filesystem is not mounted"
		return 1
	fi
}

load_modules() {
	for module in ${CORE_MODS}; do
		if modinfo "${module}" > /dev/null 2>&1 ; then
			ebegin "Loading ${module}"
			modprobe -q "${module}"
			eend $?
		fi
	done

	for mod_spec in ${FABRIC_MODS}; do
		module="$(echo ${mod_spec} | awk -F : '{print $1}')"

		if modinfo "${module}" > /dev/null 2>&1 ; then
			ebegin "Loading ${module}"
			modprobe -q "${module}"
			eend $?
		fi
	done
}

unload_modules() {
	for mod_spec in ${FABRIC_MODS}; do
		module="$(echo ${mod_spec} | awk -F : '{print $1}')"
		group="${CFS_TGT}/$(echo ${mod_spec} | awk -F : '{print $2}')"

		if [ -d "${group}" ]; then
			rmdir "${group}" 2>/dev/null
		fi

		if [ -e "/sys/module/${module}/refcnt" ]; then
			ebegin "Unloading ${module}"
			rmmod "${module}" 2>/dev/null
			eend $?
		fi
	done

	modules="$(echo ${CORE_MODS} | tac -s ' ')"
	for module in ${modules}; do
		if [ -e "/sys/module/${module}/refcnt" ]; then
			ebegin "Unloading ${module}"
			rmmod "${module}" 2>/dev/null
			eend $?
		fi
	done
}

load_config() {
	if [ -e "${STARTUP_CONFIG}" ]; then
		ebegin "Loading configuration"
		echo \
			"import os, rtslib;" \
			"config = rtslib.Config();" \
			"config.load(os.environ['__STARTUP_CONFIG'], allow_new_attrs=True);" \
			"list(config.apply())" | \
		__STARTUP_CONFIG="${STARTUP_CONFIG}" python2 2> /dev/null
		eend $?
	fi
}

clear_config() {
	ebegin "Clearing configuration"
	python2 2> /dev/null -c \
		"from rtslib import Config; config = Config(); list(config.apply())"
	eend $?
}

depend() {
	need sysfs
	after modules
	use net
}

start() {
	load_specfiles
	ebegin "Starting Linux target"
	check_install && check_configfs && load_modules && load_config
	eend $?
}

stop() {
	load_specfiles
	ebegin "Stopping Linux target"
	clear_config && unload_modules
	eend $?
}

