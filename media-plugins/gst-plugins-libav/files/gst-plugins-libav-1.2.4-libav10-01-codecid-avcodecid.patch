diff -urpN gst-libav-1.2.4.orig/ext/libav/gstavcodecmap.c gst-libav-1.2.4/ext/libav/gstavcodecmap.c
--- gst-libav-1.2.4.orig/ext/libav/gstavcodecmap.c	2014-01-06 01:58:32.000000000 -0800
+++ gst-libav-1.2.4/ext/libav/gstavcodecmap.c	2014-06-26 21:32:09.815591569 -0700
@@ -255,7 +255,7 @@ gst_ffmpeg_video_set_pix_fmts (GstCaps *
  */
 static GstCaps *
 gst_ff_vid_caps_new (AVCodecContext * context, AVCodec * codec,
-    enum CodecID codec_id, gboolean encode, const char *mimetype,
+    enum AVCodecID codec_id, gboolean encode, const char *mimetype,
     const char *fieldname, ...)
 {
   GstCaps *caps = NULL;
@@ -512,7 +512,7 @@ gst_ffmpeg_audio_set_sample_fmts (GstCap
  */
 static GstCaps *
 gst_ff_aud_caps_new (AVCodecContext * context, AVCodec * codec,
-    enum CodecID codec_id, gboolean encode, const char *mimetype,
+    enum AVCodecID codec_id, gboolean encode, const char *mimetype,
     const char *fieldname, ...)
 {
   GstCaps *caps = NULL;
@@ -726,7 +726,7 @@ gst_ff_aud_caps_new (AVCodecContext * co
  */
 
 GstCaps *
-gst_ffmpeg_codecid_to_caps (enum CodecID codec_id,
+gst_ffmpeg_codecid_to_caps (enum AVCodecID codec_id,
     AVCodecContext * context, gboolean encode)
 {
   GstCaps *caps = NULL;
@@ -828,12 +828,10 @@ gst_ffmpeg_codecid_to_caps (enum CodecID
           break;
       }
 
-      /* FIXME: context->sub_id must be filled in during decoding */
       caps =
           gst_ff_vid_caps_new (context, NULL, codec_id, encode,
           "video/x-pn-realvideo", "rmversion", G_TYPE_INT, version, NULL);
       if (context) {
-        gst_caps_set_simple (caps, "format", G_TYPE_INT, context->sub_id, NULL);
         if (context->extradata_size >= 8) {
           gst_caps_set_simple (caps,
               "subformat", G_TYPE_INT, GST_READ_UINT32_BE (context->extradata),
@@ -1682,7 +1680,6 @@ gst_ffmpeg_codecid_to_caps (enum CodecID
     case AV_CODEC_ID_FLIC:
     case AV_CODEC_ID_VMDVIDEO:
     case AV_CODEC_ID_VMDAUDIO:
-    case AV_CODEC_ID_SNOW:
     case AV_CODEC_ID_VIXL:
     case AV_CODEC_ID_QPEG:
     case AV_CODEC_ID_PGMYUV:
@@ -2132,7 +2129,7 @@ gst_ffmpeg_codecid_to_caps (enum CodecID
 
 static GstCaps *
 gst_ffmpeg_pixfmt_to_caps (enum PixelFormat pix_fmt, AVCodecContext * context,
-    enum CodecID codec_id)
+    enum AVCodecID codec_id)
 {
   GstCaps *caps = NULL;
   GstVideoFormat format;
@@ -2193,7 +2190,7 @@ gst_ffmpeg_smpfmt_to_audioformat (enum A
 
 static GstCaps *
 gst_ffmpeg_smpfmt_to_caps (enum AVSampleFormat sample_fmt,
-    AVCodecContext * context, AVCodec * codec, enum CodecID codec_id)
+    AVCodecContext * context, AVCodec * codec, enum AVCodecID codec_id)
 {
   GstCaps *caps = NULL;
   GstAudioFormat format;
@@ -2230,7 +2227,7 @@ caps_has_field (GstCaps * caps, const gc
 
 GstCaps *
 gst_ffmpeg_codectype_to_audio_caps (AVCodecContext * context,
-    enum CodecID codec_id, gboolean encode, AVCodec * codec)
+    enum AVCodecID codec_id, gboolean encode, AVCodec * codec)
 {
   GstCaps *caps = NULL;
 
@@ -2258,7 +2255,7 @@ gst_ffmpeg_codectype_to_audio_caps (AVCo
 
 GstCaps *
 gst_ffmpeg_codectype_to_video_caps (AVCodecContext * context,
-    enum CodecID codec_id, gboolean encode, AVCodec * codec)
+    enum AVCodecID codec_id, gboolean encode, AVCodec * codec)
 {
   GstCaps *caps;
 
@@ -2813,7 +2810,7 @@ full_copy:
  */
 
 void
-gst_ffmpeg_caps_with_codecid (enum CodecID codec_id,
+gst_ffmpeg_caps_with_codecid (enum AVCodecID codec_id,
     enum AVMediaType codec_type, const GstCaps * caps, AVCodecContext * context)
 {
   GstStructure *str;
@@ -2953,18 +2950,6 @@ gst_ffmpeg_caps_with_codecid (enum Codec
     }
       break;
 
-    case AV_CODEC_ID_RV10:
-    case AV_CODEC_ID_RV20:
-    case AV_CODEC_ID_RV30:
-    case AV_CODEC_ID_RV40:
-    {
-      gint format;
-
-      if (gst_structure_get_int (str, "format", &format))
-        context->sub_id = format;
-
-      break;
-    }
     case AV_CODEC_ID_COOK:
     case AV_CODEC_ID_RA_288:
     case AV_CODEC_ID_RA_144:
@@ -3188,14 +3173,14 @@ gst_ffmpeg_formatid_to_caps (const gchar
 
 gboolean
 gst_ffmpeg_formatid_get_codecids (const gchar * format_name,
-    enum CodecID ** video_codec_list, enum CodecID ** audio_codec_list,
+    enum AVCodecID ** video_codec_list, enum AVCodecID ** audio_codec_list,
     AVOutputFormat * plugin)
 {
-  static enum CodecID tmp_vlist[] = {
+  static enum AVCodecID tmp_vlist[] = {
     AV_CODEC_ID_NONE,
     AV_CODEC_ID_NONE
   };
-  static enum CodecID tmp_alist[] = {
+  static enum AVCodecID tmp_alist[] = {
     AV_CODEC_ID_NONE,
     AV_CODEC_ID_NONE
   };
@@ -3203,12 +3188,12 @@ gst_ffmpeg_formatid_get_codecids (const
   GST_LOG ("format_name : %s", format_name);
 
   if (!strcmp (format_name, "mp4")) {
-    static enum CodecID mp4_video_list[] = {
+    static enum AVCodecID mp4_video_list[] = {
       AV_CODEC_ID_MPEG4, AV_CODEC_ID_H264,
       AV_CODEC_ID_MJPEG,
       AV_CODEC_ID_NONE
     };
-    static enum CodecID mp4_audio_list[] = {
+    static enum AVCodecID mp4_audio_list[] = {
       AV_CODEC_ID_AAC, AV_CODEC_ID_MP3,
       AV_CODEC_ID_NONE
     };
@@ -3216,12 +3201,12 @@ gst_ffmpeg_formatid_get_codecids (const
     *video_codec_list = mp4_video_list;
     *audio_codec_list = mp4_audio_list;
   } else if (!strcmp (format_name, "mpeg")) {
-    static enum CodecID mpeg_video_list[] = { AV_CODEC_ID_MPEG1VIDEO,
+    static enum AVCodecID mpeg_video_list[] = { AV_CODEC_ID_MPEG1VIDEO,
       AV_CODEC_ID_MPEG2VIDEO,
       AV_CODEC_ID_H264,
       AV_CODEC_ID_NONE
     };
-    static enum CodecID mpeg_audio_list[] = { AV_CODEC_ID_MP1,
+    static enum AVCodecID mpeg_audio_list[] = { AV_CODEC_ID_MP1,
       AV_CODEC_ID_MP2,
       AV_CODEC_ID_MP3,
       AV_CODEC_ID_NONE
@@ -3230,10 +3215,10 @@ gst_ffmpeg_formatid_get_codecids (const
     *video_codec_list = mpeg_video_list;
     *audio_codec_list = mpeg_audio_list;
   } else if (!strcmp (format_name, "dvd")) {
-    static enum CodecID mpeg_video_list[] = { AV_CODEC_ID_MPEG2VIDEO,
+    static enum AVCodecID mpeg_video_list[] = { AV_CODEC_ID_MPEG2VIDEO,
       AV_CODEC_ID_NONE
     };
-    static enum CodecID mpeg_audio_list[] = { AV_CODEC_ID_MP2,
+    static enum AVCodecID mpeg_audio_list[] = { AV_CODEC_ID_MP2,
       AV_CODEC_ID_AC3,
       AV_CODEC_ID_DTS,
       AV_CODEC_ID_PCM_S16BE,
@@ -3243,12 +3228,12 @@ gst_ffmpeg_formatid_get_codecids (const
     *video_codec_list = mpeg_video_list;
     *audio_codec_list = mpeg_audio_list;
   } else if (!strcmp (format_name, "mpegts")) {
-    static enum CodecID mpegts_video_list[] = { AV_CODEC_ID_MPEG1VIDEO,
+    static enum AVCodecID mpegts_video_list[] = { AV_CODEC_ID_MPEG1VIDEO,
       AV_CODEC_ID_MPEG2VIDEO,
       AV_CODEC_ID_H264,
       AV_CODEC_ID_NONE
     };
-    static enum CodecID mpegts_audio_list[] = { AV_CODEC_ID_MP2,
+    static enum AVCodecID mpegts_audio_list[] = { AV_CODEC_ID_MP2,
       AV_CODEC_ID_MP3,
       AV_CODEC_ID_AC3,
       AV_CODEC_ID_DTS,
@@ -3259,28 +3244,28 @@ gst_ffmpeg_formatid_get_codecids (const
     *video_codec_list = mpegts_video_list;
     *audio_codec_list = mpegts_audio_list;
   } else if (!strcmp (format_name, "vob")) {
-    static enum CodecID vob_video_list[] =
+    static enum AVCodecID vob_video_list[] =
         { AV_CODEC_ID_MPEG2VIDEO, AV_CODEC_ID_NONE };
-    static enum CodecID vob_audio_list[] = { AV_CODEC_ID_MP2, AV_CODEC_ID_AC3,
+    static enum AVCodecID vob_audio_list[] = { AV_CODEC_ID_MP2, AV_CODEC_ID_AC3,
       AV_CODEC_ID_DTS, AV_CODEC_ID_NONE
     };
 
     *video_codec_list = vob_video_list;
     *audio_codec_list = vob_audio_list;
   } else if (!strcmp (format_name, "flv")) {
-    static enum CodecID flv_video_list[] =
+    static enum AVCodecID flv_video_list[] =
         { AV_CODEC_ID_FLV1, AV_CODEC_ID_NONE };
-    static enum CodecID flv_audio_list[] =
+    static enum AVCodecID flv_audio_list[] =
         { AV_CODEC_ID_MP3, AV_CODEC_ID_NONE };
 
     *video_codec_list = flv_video_list;
     *audio_codec_list = flv_audio_list;
   } else if (!strcmp (format_name, "asf")) {
-    static enum CodecID asf_video_list[] =
+    static enum AVCodecID asf_video_list[] =
         { AV_CODEC_ID_WMV1, AV_CODEC_ID_WMV2, AV_CODEC_ID_MSMPEG4V3,
       AV_CODEC_ID_NONE
     };
-    static enum CodecID asf_audio_list[] =
+    static enum AVCodecID asf_audio_list[] =
         { AV_CODEC_ID_WMAV1, AV_CODEC_ID_WMAV2, AV_CODEC_ID_MP3,
       AV_CODEC_ID_NONE
     };
@@ -3288,22 +3273,22 @@ gst_ffmpeg_formatid_get_codecids (const
     *video_codec_list = asf_video_list;
     *audio_codec_list = asf_audio_list;
   } else if (!strcmp (format_name, "dv")) {
-    static enum CodecID dv_video_list[] =
+    static enum AVCodecID dv_video_list[] =
         { AV_CODEC_ID_DVVIDEO, AV_CODEC_ID_NONE };
-    static enum CodecID dv_audio_list[] =
+    static enum AVCodecID dv_audio_list[] =
         { AV_CODEC_ID_PCM_S16LE, AV_CODEC_ID_NONE };
 
     *video_codec_list = dv_video_list;
     *audio_codec_list = dv_audio_list;
   } else if (!strcmp (format_name, "mov")) {
-    static enum CodecID mov_video_list[] = {
+    static enum AVCodecID mov_video_list[] = {
       AV_CODEC_ID_SVQ1, AV_CODEC_ID_SVQ3, AV_CODEC_ID_MPEG4,
       AV_CODEC_ID_H263, AV_CODEC_ID_H263P,
       AV_CODEC_ID_H264, AV_CODEC_ID_DVVIDEO,
       AV_CODEC_ID_MJPEG,
       AV_CODEC_ID_NONE
     };
-    static enum CodecID mov_audio_list[] = {
+    static enum AVCodecID mov_audio_list[] = {
       AV_CODEC_ID_PCM_MULAW, AV_CODEC_ID_PCM_ALAW, AV_CODEC_ID_ADPCM_IMA_QT,
       AV_CODEC_ID_MACE3, AV_CODEC_ID_MACE6, AV_CODEC_ID_AAC,
       AV_CODEC_ID_AMR_NB, AV_CODEC_ID_AMR_WB,
@@ -3314,11 +3299,11 @@ gst_ffmpeg_formatid_get_codecids (const
     *video_codec_list = mov_video_list;
     *audio_codec_list = mov_audio_list;
   } else if ((!strcmp (format_name, "3gp") || !strcmp (format_name, "3g2"))) {
-    static enum CodecID tgp_video_list[] = {
+    static enum AVCodecID tgp_video_list[] = {
       AV_CODEC_ID_MPEG4, AV_CODEC_ID_H263, AV_CODEC_ID_H263P, AV_CODEC_ID_H264,
       AV_CODEC_ID_NONE
     };
-    static enum CodecID tgp_audio_list[] = {
+    static enum AVCodecID tgp_audio_list[] = {
       AV_CODEC_ID_AMR_NB, AV_CODEC_ID_AMR_WB,
       AV_CODEC_ID_AAC,
       AV_CODEC_ID_NONE
@@ -3327,20 +3312,20 @@ gst_ffmpeg_formatid_get_codecids (const
     *video_codec_list = tgp_video_list;
     *audio_codec_list = tgp_audio_list;
   } else if (!strcmp (format_name, "mmf")) {
-    static enum CodecID mmf_audio_list[] = {
+    static enum AVCodecID mmf_audio_list[] = {
       AV_CODEC_ID_ADPCM_YAMAHA, AV_CODEC_ID_NONE
     };
     *video_codec_list = NULL;
     *audio_codec_list = mmf_audio_list;
   } else if (!strcmp (format_name, "amr")) {
-    static enum CodecID amr_audio_list[] = {
+    static enum AVCodecID amr_audio_list[] = {
       AV_CODEC_ID_AMR_NB, AV_CODEC_ID_AMR_WB,
       AV_CODEC_ID_NONE
     };
     *video_codec_list = NULL;
     *audio_codec_list = amr_audio_list;
   } else if (!strcmp (format_name, "gif")) {
-    static enum CodecID gif_image_list[] = {
+    static enum AVCodecID gif_image_list[] = {
       AV_CODEC_ID_RAWVIDEO, AV_CODEC_ID_NONE
     };
     *video_codec_list = gif_image_list;
@@ -3353,11 +3338,11 @@ gst_ffmpeg_formatid_get_codecids (const
     *video_codec_list = tmp_vlist;
     *audio_codec_list = tmp_alist;
   } else if ((!strcmp (format_name, "pva"))) {
-    static enum CodecID tgp_video_list[] = {
+    static enum AVCodecID tgp_video_list[] = {
       AV_CODEC_ID_MPEG2VIDEO,
       AV_CODEC_ID_NONE
     };
-    static enum CodecID tgp_audio_list[] = {
+    static enum AVCodecID tgp_audio_list[] = {
       AV_CODEC_ID_MP2,
       AV_CODEC_ID_NONE
     };
@@ -3379,10 +3364,10 @@ gst_ffmpeg_formatid_get_codecids (const
  * optional extra info
  */
 
-enum CodecID
+enum AVCodecID
 gst_ffmpeg_caps_to_codecid (const GstCaps * caps, AVCodecContext * context)
 {
-  enum CodecID id = AV_CODEC_ID_NONE;
+  enum AVCodecID id = AV_CODEC_ID_NONE;
   const gchar *mimetype;
   const GstStructure *structure;
   gboolean video = FALSE, audio = FALSE;        /* we want to be sure! */
diff -urpN gst-libav-1.2.4.orig/ext/libav/gstavcodecmap.h gst-libav-1.2.4/ext/libav/gstavcodecmap.h
--- gst-libav-1.2.4.orig/ext/libav/gstavcodecmap.h	2013-11-11 04:43:01.000000000 -0800
+++ gst-libav-1.2.4/ext/libav/gstavcodecmap.h	2014-06-26 21:32:09.820591520 -0700
@@ -73,7 +73,7 @@ gst_ffmpeg_compliance_get_type (void);
  */
 
 GstCaps *
-gst_ffmpeg_codecid_to_caps   (enum CodecID    codec_id,
+gst_ffmpeg_codecid_to_caps   (enum AVCodecID    codec_id,
                               AVCodecContext *context,
                               gboolean        encode);
 
@@ -84,12 +84,12 @@ gst_ffmpeg_codecid_to_caps   (enum Codec
 
 GstCaps *
 gst_ffmpeg_codectype_to_audio_caps (AVCodecContext *context, 
-                              enum CodecID codec_id,
+                              enum AVCodecID codec_id,
 				    gboolean encode,
 				    AVCodec *codec);
 GstCaps *
 gst_ffmpeg_codectype_to_video_caps (AVCodecContext *context, 
-                              enum CodecID codec_id,
+                              enum AVCodecID codec_id,
 				    gboolean encode,
 				    AVCodec *codec);
 
@@ -99,7 +99,7 @@ gst_ffmpeg_codectype_to_video_caps (AVCo
  * context and a codecID.
  */
 
-enum CodecID
+enum AVCodecID
 gst_ffmpeg_caps_to_codecid (const GstCaps  *caps,
                             AVCodecContext *context);
 
@@ -109,7 +109,7 @@ gst_ffmpeg_caps_to_codecid (const GstCap
  */
 
 void
-gst_ffmpeg_caps_with_codecid (enum CodecID    codec_id,
+gst_ffmpeg_caps_with_codecid (enum AVCodecID    codec_id,
                               enum AVMediaType  codec_type,
                               const GstCaps  *caps,
                               AVCodecContext *context);
@@ -155,8 +155,8 @@ gst_ffmpeg_formatid_to_caps (const gchar
 
 gboolean
 gst_ffmpeg_formatid_get_codecids (const gchar *format_name,
-                                  enum CodecID ** video_codec_list,
-                                  enum CodecID ** audio_codec_list,
+                                  enum AVCodecID ** video_codec_list,
+                                  enum AVCodecID ** audio_codec_list,
 				  AVOutputFormat * plugin);
 
 
diff -urpN gst-libav-1.2.4.orig/ext/libav/gstavmux.c gst-libav-1.2.4/ext/libav/gstavmux.c
--- gst-libav-1.2.4.orig/ext/libav/gstavmux.c	2014-02-04 08:28:56.000000000 -0800
+++ gst-libav-1.2.4/ext/libav/gstavmux.c	2014-06-26 21:32:09.821591511 -0700
@@ -120,7 +120,7 @@ static void gst_ffmpegmux_set_property (
 static void gst_ffmpegmux_get_property (GObject * object, guint prop_id,
     GValue * value, GParamSpec * pspec);
 
-static GstCaps *gst_ffmpegmux_get_id_caps (enum CodecID *id_list);
+static GstCaps *gst_ffmpegmux_get_id_caps (enum AVCodecID *id_list);
 static void gst_ffmpeg_mux_simple_caps_set_int_list (GstCaps * caps,
     const gchar * field, guint num, const gint * values);
 
@@ -193,7 +193,7 @@ gst_ffmpegmux_base_init (gpointer g_clas
   GstPadTemplate *videosinktempl, *audiosinktempl, *srctempl;
   AVOutputFormat *in_plugin;
   GstCaps *srccaps, *audiosinkcaps, *videosinkcaps;
-  enum CodecID *video_ids = NULL, *audio_ids = NULL;
+  enum AVCodecID *video_ids = NULL, *audio_ids = NULL;
   gchar *longname, *description;
   const char *replacement;
   gboolean is_formatter;
@@ -823,7 +823,7 @@ gst_ffmpegmux_change_state (GstElement *
 }
 
 static GstCaps *
-gst_ffmpegmux_get_id_caps (enum CodecID *id_list)
+gst_ffmpegmux_get_id_caps (enum AVCodecID *id_list)
 {
   GstCaps *caps, *t;
   gint i;
diff -urpN gst-libav-1.2.4.orig/ext/libav/gstavutils.c gst-libav-1.2.4/ext/libav/gstavutils.c
--- gst-libav-1.2.4.orig/ext/libav/gstavutils.c	2013-09-24 06:06:58.000000000 -0700
+++ gst-libav-1.2.4/ext/libav/gstavutils.c	2014-06-26 21:32:09.822591501 -0700
@@ -32,7 +32,7 @@
 #include <libavutil/mem.h>
 
 G_CONST_RETURN gchar *
-gst_ffmpeg_get_codecid_longname (enum CodecID codec_id)
+gst_ffmpeg_get_codecid_longname (enum AVCodecID codec_id)
 {
   AVCodec *codec;
   /* Let's use what ffmpeg can provide us */
diff -urpN gst-libav-1.2.4.orig/ext/libav/gstavutils.h gst-libav-1.2.4/ext/libav/gstavutils.h
--- gst-libav-1.2.4.orig/ext/libav/gstavutils.h	2013-09-24 06:06:58.000000000 -0700
+++ gst-libav-1.2.4/ext/libav/gstavutils.h	2014-06-26 21:32:09.823591491 -0700
@@ -86,7 +86,7 @@ int
 gst_ffmpeg_auto_max_threads(void);
 
 G_CONST_RETURN gchar *
-gst_ffmpeg_get_codecid_longname (enum CodecID codec_id);
+gst_ffmpeg_get_codecid_longname (enum AVCodecID codec_id);
 
 gint
 av_smp_format_depth(enum AVSampleFormat smp_fmt);
